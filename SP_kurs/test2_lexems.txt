Table of tokens!
=======================================================
#	        NAME                TYPE     VALUE LINE
=======================================================
1	     PROGRAM             program         0    1
2	      Flyk22        program name         0    1
3	           ;           separator         0    1
4	       BEGIN               start         0    2
5	         VAR            variable         0    3
6	       INT16            var type         0    3
7	           a          identifier         0    3
8	           ,               comma         0    3
9	           b          identifier         0    3
10	           ,               comma         0    3
11	           x          identifier         0    3
12	           ;           separator         0    3
13	        SCAN               input         0    4
14	           (         left braket         0    4
15	           a          identifier         0    4
16	           )        right braket         0    4
17	           ;           separator         0    4
18	        SCAN               input         0    5
19	           (         left braket         0    5
20	           b          identifier         0    5
21	           )        right braket         0    5
22	           ;           separator         0    5
23	        SCAN               input         0    6
24	           (         left braket         0    6
25	           x          identifier         0    6
26	           )        right braket         0    6
27	           ;           separator         0    6
28	          IF                  if         0    7
29	           (         left braket         0    7
30	           (         left braket         0    7
31	           a          identifier         0    7
32	          ==                 equ         0    7
33	           b          identifier         0    7
34	           )        right braket         0    7
35	          &&                 and         0    7
36	           (         left braket         0    7
37	           b          identifier         0    7
38	          ==                 equ         0    7
39	           x          identifier         0    7
40	           )        right braket         0    7
41	          &&                 and         0    7
42	           (         left braket         0    7
43	           a          identifier         0    7
44	          ==                 equ         0    7
45	           x          identifier         0    7
46	           )        right braket         0    7
47	           )        right braket         0    7
48	       BEGIN               start         0    8
49	       PRINT              output         0    9
50	           (         left braket         0    9
51	           1              number         1    9
52	           )        right braket         0    9
53	           ;           separator         0    9
54	        ELSE                else         0   10
55	       PRINT              output         0   11
56	           (         left braket         0   11
57	           0              number         0   11
58	           )        right braket         0   11
59	           ;           separator         0   11
60	         END                 end         0   12
61	          IF                  if         0   14
62	           (         left braket         0   14
63	           (         left braket         0   14
64	           a          identifier         0   14
65	          <<                less         0   14
66	           0              number         0   14
67	           )        right braket         0   14
68	          ||                  or         0   14
69	           (         left braket         0   14
70	           b          identifier         0   14
71	          <<                less         0   14
72	           0              number         0   14
73	           )        right braket         0   14
74	          ||                  or         0   14
75	           (         left braket         0   14
76	           x          identifier         0   14
77	          <<                less         0   14
78	           0              number         0   14
79	           )        right braket         0   14
80	           )        right braket         0   14
81	       BEGIN               start         0   15
82	       PRINT              output         0   16
83	           (         left braket         0   16
84	          -1              number        -1   16
85	           )        right braket         0   16
86	           ;           separator         0   16
87	        ELSE                else         0   17
88	       PRINT              output         0   18
89	           (         left braket         0   18
90	           0              number         0   18
91	           )        right braket         0   18
92	           ;           separator         0   18
93	         END                 end         0   19
94	          IF                  if         0   21
95	           (         left braket         0   21
96	          !!                 not         0   21
97	           (         left braket         0   21
98	           a          identifier         0   21
99	          <<                less         0   21
100	           (         left braket         0   21
101	           b          identifier         0   21
102	           +                 add         0   21
103	           x          identifier         0   21
104	           )        right braket         0   21
105	           )        right braket         0   21
106	           )        right braket         0   21
107	       BEGIN               start         0   22
108	       PRINT              output         0   23
109	           (         left braket         0   23
110	          10              number        10   23
111	           )        right braket         0   23
112	           ;           separator         0   23
113	        ELSE                else         0   24
114	       PRINT              output         0   25
115	           (         left braket         0   25
116	           0              number         0   25
117	           )        right braket         0   25
118	           ;           separator         0   25
119	         END                 end         0   26
120	         END                 end         0   28
121	                     end of file         0   29
